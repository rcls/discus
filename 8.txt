registers

SS/RR registers:
A
W
X
Y

Buses
 - operand / address
 - mem read
 - alu out
 - mem write

Operand bus is also address bus.



memory connector (32 bytes):
8 w1
8 w0
8 r
8 row sel
4 col sel
= 36 .... so a 40 pin connector (1mm one sided? or even 2.54mm?)

source bus is register or constant.  Memory address is always source bus.
operand bus is source bus direct or memory lookup
result bus is ALU output, or operand bus direct (add 0...)

00XXXXXX - data prefix (load immediate register).
  * any other instruction clears data prefix.

00CCCLXX - with prefix, jump, opt link.
  [prob have space to use 01 & get RR...]

[All we get from this 01 instead of 00 is indirects & ret...  and make others
 more packed.  Instead Separate uncond jumps that may be indirect?]
01CCCLRR - jump/call except:
01CCC111 - return (only with no prefix, with prefix is call).

10AAAMRR - ins that r/w A. (flags Z C O?)
  * 7 basic operations:
     add(c) sub(c) or and xor
  * also possibly cmp or sta?

110WWMRR - operand to reg WW.

111 : misc crap:
  on all regs: inc, dec
  111000RR : inc. (flags Z)
  111010RR : dec.

  111100RR : in  (or could make reg 3 an I/O port... or mmap i/o)
  111110RR : out

  111001RR : sta

  111011xx :
  111101xx :
  111111xx :
     clrc
     setc
     shr
     ror
     not
     neg


